# 服务器端口
server.port=80
# 访问路径前缀
server.servlet.context-path=/dev/

### 数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/socialapp?useUnicode=true&characterEncoding=utf8&useSSL=false&tinyInt1isBit=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root

### druid 连接池配置
# 初始化连接池数量
spring.datasource.druid.initial-size=5
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 最大连接池数量
spring.datasource.druid.max-active=1000
# 获取连接等待超时的时间（ms）
spring.datasource.druid.max-wait=60000
# 关闭空闲连接的检测时间间隔（ms）
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 一个连接在连接池中的最小生存的时间（ms）
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 验证数据库服务可用性的sql.用来检测连接是否有效的sql
spring.datasource.druid.validation-query=SELECT 1
# 申请连接时检测空闲时间，根据空闲时间再检测连接是否有效.建议配置为true，不影响性能，并且保证安全性
spring.datasource.druid.test-while-idle=true
# 申请连接时直接检测连接是否有效.申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-borrow=false
# 归还连接时检测连接是否有效.归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
# 开启PSCache
spring.datasource.druid.pool-prepared-statements=true
# 每个连接上PSCache的大小
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 连接出错后尝试连接次数
spring.datasource.druid.connection-error-retry-attempts=3
# 连接出错后重试时间间隔（ms）
spring.datasource.druid.time-between-connect-error-millis=300000
# 监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 配置 StatViewServlet（打开Druid监控页面）
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.allow=
## 配置 StatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/druid/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*


### redis配置
spring.redis.host=182.92.205.179
spring.redis.port=60001
spring.redis.password=redis_japan_daigou
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-active=200
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.min-idle=0


# 单个上传文件的大小限制
spring.servlet.multipart.max-file-size=5MB


# 设置 mapper 包的日志级别（打印sql）
logging.level.com.z.mapper=debug

# 热部署
spring.devtools.restart.enabled=true


###################### 自定义配置 ######################
### 线程池配置
# 核心线程数
socialapp.threadpool.core-size=20
# 最大线程数
socialapp.threadpool.max-size=200
# 空闲线程可存活时间(秒)
socialapp.threadpool.keep-alive-time=10

### 登录令牌相关
# 保持登录的时间（单位:天）
socialapp.jwt.login-keep-days=100
# JWT的全局加密密钥
socialapp.jwt.token-secret-key=socialapp

### 文件相关
# 文件访问的前缀。【例如：http://182.92.205.179:1225/file/download，"/file/download" 是下载文件的请求路径前缀】
socialapp.file.access-prefix=http://127.0.0.1/dev/file/download
# 文件保存的共同基本路径
socialapp.file.sava-base-dir=D:/C_DISK_DESKTOP/project/socialapp/img

### 即构相关
# 即构appId(由即构提供)
socialapp.zego.app-id=3442613776
# 即构密钥(由即构提供)
socialapp.zego.secret-key=630159f3c21039ba948fcbcf11a9d08f
# 生成token有效时间(秒)
socialapp.zego.effective-time-in-seconds=36000
# 调试时，置为 true, 可在控制台输出更多信息；正式运行时，置为 false
socialapp.zego.verbose=true
